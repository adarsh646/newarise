rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isTrainer() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'trainer' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
    }
    
    function isUser() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'user';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();
    }
    
    // Chat - Conversations collection
    match /conversations/{conversationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                      request.resource.data.participants.size() == 2 &&
                      request.auth.uid in request.resource.data.participants;
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    // Chat - Messages collection with subcollection
    match /messages/{conversationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
      
      // Messages texts subcollection
      match /texts/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && 
                       request.auth.uid == request.resource.data.senderId;
        allow update: if isAuthenticated() && request.auth.uid == resource.data.senderId;
        allow delete: if isAuthenticated() && request.auth.uid == resource.data.senderId;
      }
    }
    
    // Payments collection
    match /user_payments/{paymentId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    // Workouts collection
    match /workouts/{workoutId} {
      allow read: if true;
      allow create: if isAuthenticated() && (isTrainer() || isAdmin());
      allow update: if isAuthenticated() && (isTrainer() || isAdmin());
      allow delete: if isAuthenticated() && (isTrainer() || isAdmin());
    }
    
    // Plans collection
    match /plans/{planId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && (isTrainer() || isAdmin());
      allow update: if isAuthenticated() && (isTrainer() || isAdmin() || request.auth.uid == resource.data.trainerId);
      allow delete: if isAuthenticated() && (isTrainer() || isAdmin());
    }
    
    // Predefined Plans collection
    match /predefined_plans/{planId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isAdmin();
      allow update: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Plan progress tracking
    match /plan_progress/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();
      
      // Plans subcollection
      match /plans/{planId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow create: if isAuthenticated() && request.auth.uid == userId;
        allow update: if isAuthenticated() && request.auth.uid == userId;
        allow delete: if isAuthenticated() && request.auth.uid == userId;
      }
    }
    
    // Surveys collection
    match /surveys/{surveyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && (isTrainer() || isAdmin());
      allow update: if isAuthenticated() && (isTrainer() || isAdmin());
      allow delete: if isAuthenticated() && (isTrainer() || isAdmin());
      
      // Survey responses subcollection
      match /responses/{responseId} {
        allow read: if isAuthenticated() && (isAdmin() || request.auth.uid == resource.data.userId);
        allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
        allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
        allow delete: if isAdmin();
      }
    }
    
    // Trainer-specific data
    match /trainer_info/{trainerId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == trainerId;
      allow update: if isAuthenticated() && request.auth.uid == trainerId;
      allow delete: if isAdmin();
    }
    
    // User to trainer relationships
    match /user_trainers/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Trainer to user relationships
    match /trainer_users/{trainerId} {
      allow read: if isAuthenticated() && request.auth.uid == trainerId;
      allow create: if isAuthenticated() && request.auth.uid == trainerId;
      allow update: if isAuthenticated() && request.auth.uid == trainerId;
      allow delete: if isAuthenticated() && request.auth.uid == trainerId;
    }
    
    // Trainer requests collection
    match /trainer_requests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.trainerId);
      allow delete: if isAuthenticated() && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.trainerId);
    }
    
    // Fitness Plans collection (Trainer-created plans for clients)
    match /fitness_plans/{planId} {
      allow read: if isAuthenticated() && (isTrainer() || isAdmin());
      allow create: if isAuthenticated() && (isTrainer() || isAdmin());
      allow update: if isAuthenticated() && (isTrainer() || isAdmin());
      allow delete: if isAuthenticated() && (isTrainer() || isAdmin());
      
      // Workouts subcollection within fitness plans
      match /workouts/{workoutId} {
        allow read: if isAuthenticated() && (isTrainer() || isAdmin());
        allow create: if isAuthenticated() && (isTrainer() || isAdmin());
        allow update: if isAuthenticated() && (isTrainer() || isAdmin());
        allow delete: if isAuthenticated() && (isTrainer() || isAdmin());
      }
    }
    
    // Generic catch-all (deny by default)
    match /{document=**} {
      allow read, write: if false;
    }
  }
}